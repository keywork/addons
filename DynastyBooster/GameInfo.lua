local ADDON_NAME, DGV = ...;

local GameInfo = {};
DGV.GameInfo = GameInfo;

local select,strlen,strjoin
	= select,strlen,strjoin;

-- Interaction Widgets
local Scanner = CreateFrame('GameTooltip','DGV_TooltipScanner');
Scanner:AddFontStrings(
	Scanner:CreateFontString( "$parentTextLeft1" ),
	Scanner:CreateFontString( "$parentTextRight1" )
);

local QuestAliasData = {
	{8336,37440},
	{24753,24761,24773,24779,24785,31160,24641,24767,26275},
	{28757,28762,28763,28764,28765,28766,28767,29078,31139},
	{14266,14013,25147},
	{26913,24969},
	{14274,26904,26914,10073,14012,25145},
	{14272,14010,25141},
	{28806,28808,28809,28810,28811,28812,28813,29082},
	{33089,37212},
	{33091,37214},
	{33090,37213},
	{33095,37218},
	{33097,37220},
	{33096,37219},
	{33092,37215},
	{33094,37217},
	{33093,37216},
	{31429,31666},
	{24503,28414},
	{14281,10068,26940,26968,14008,25149},
	{9288,9393},
	{9303,37444},
	{28780,28784,28785,28786,28787,28788,28789,29080,31143},
	{25134,37446},
	{14279,10072,26919,26949,26970,14009,27066},
	{14113,14153},
	{28759,28769,28770,28771,28772,28773,28774,29079,31140},
	{9290,8328},
	{26421,26422,26423,31137,26424,26425},
	{31172,31170},
	{14283,26948,27067},
	{24755,24763,24775,24781,24787,31163,24643,24769,26277},
	{30039,30040,30041,30042,30043,30044,30045},
	{31148,28651},
	{26711,26712},
	{9287,9676},
	{9291,8564},
	{26969,14011,25143,27027},
	{24754,24762,24774,24780,24786,31161,24642,24768,26276},
	{9280,9369},
	{2158,37112},
	{14285,14287,14288,14289,14290,14291,14286},
	{8330,37443},
	{9305,37445},
	{14276,10070,14007,25139},
	{24752,26198},
	{31138,31162},
	{24772,26207},
	{26204,24640},
	{24751,24759,24771,24777,24783,31158,24639,24765,26273},
	{26197,26199,26202,26203,26206,31135},
	{26917,27021},
	{28606,28607},
	{30027,30033,30034,30035,30036,30037,30038},
	{14109,14110},
	{24528,26918},
	{28817,28818,28819,28820,28821,28822,28823,29083,31145},
	{24750,24758,24770,24776,24782,31159,24607,24764,26272},
	{37442,8345},
	{28791,28792,28793,28794,28795,28796,28797,29081,31144},
	{8346,37439},
	{31147,31157,31166,31171},
	{36588,37531},
	{37423,37424,37425,37426,37427,37428,37429,37430,37431,37432},
	{9289,8329},
	{26383,26385},
	{25173,29665},
	{14001,14474},
	{26378,28562},
	{14439,24550},
	{14127,14128},
	{24457,20441},
	{9327,9329},
	{9454,10324},
	{749,751},
	{26179,764},
	{26964,28568},
	{26353,26354,26355,26356},
	{31034,31036,31037},
	{26365,28563},
	{26379,13601},
	{26398,26397},
	{27337,27365},
	{30998,30969},
	{27435,27441},
	{30997,30982},
	{29412,29401},
	{9281,9761},
	{29098,29112},
	{29441,27575},
	{26728,28564},
	{14083,14084},
	{27354,27400},
	{29021,29022,29023,29024},
	{27356,27404},
	{30996,30983},
	{27790,27850},
	{27037,27036},
	{28089,28571},
	{26444,26448},
	{26443,26447},
	{9621,9812},
	{13921,14018},
	{26739,26321},
	{9626,9813},
	{26445,26449},
	{34672,34673},
	{13886,13888},
	{28572,28619},
	{26688,26691},
	{336,335},
	{26746,26325},
	{26819,26487},
	{1431,1432},
	{26775,26362},
	{25730,26043},
	{26748,26334},
	{26742,9436},
	{26825,26826},
	{26745,26323},
	{28550,28551},
	{26820,26450},
	{26774,26360},
	{26772,26351},
	{2953,4603,4604},
	{26346,26911},
	{26780,26304},
	{14193,14360},
	{14361,14223},
	{26751,26338},
	{26773,26359},
	{26939,26941,26942},
	{26433,26590},
	{1454,1455,1456},
	{26781,26303},
	{26412,26782,26783,26399},
	{26049,26912},
	{2951,2952,4601,4602,4605,4606},
	{26341,26909},
	{26763,26403},
	{26779,26405},
	{25045,24546},
	{26523,26310},
	{1433,1436},
	{27164,26925},
	{26809,26550},
	{27163,27117},
	{26641,26382},
	{14381,14346},
	{26524,26309},
	{26498,26307},
	{14362,14232},
	{26810,26551},
	{14365,14255},
	{26521,26357},
	{25086,24667},
	{26518,26366},
	{26814,26555},
	{26553,26812},
	{26526,26369},
	{14373,14342},
	{26516,26308},
	{14376,14344},
	{25041,24552},
	{25085,24608},
	{26515,26367},
	{26554,26813},
	{14374,5581},
	{26490,26283},
	{14364,14227},
	{26816,26535},
	{2947,2949},
	{27162,26924},
	{26532,26419},
	{26491,26267},
	{26492,26268},
	{26643,26387},
	{26517,26363},
	{26531,26558},
	{14358,14213},
	{27158,28505,28749,26920,28508,28750},
	{26596,26696},
	{27161,26922},
	{26528,26381},
	{26529,26406},
	{26530,26418},
	{14410,26589},
	{26552,26811},
	{14357,14219},
	{26525,26368},
	{27165,26926},
	{27160,26923},
	{14363,14225},
	{26815,26533},
	{25364,25427},
	{27677,27680},
	{27199,27086},
	{25517,25518},
	{27676,27681},
	{25542,25561,25543,25562},
	{27174,26938},
	{25654,25340},
	{25504,25505},
	{25515,25516},
	{25450,25453},
	{25524,25526},
	{27249,27253},
	{27263,27264,27260},
	{25394,25230},
	{25403,25344},
	{25532,25533},
	{27429,27296},
	{25433,25374},
	{27129,27130},
	{25398,25250},
	{25447,25210},
	{25369,25431},
	{1222,1270},
	{27198,27085},
	{27262,27259},
	{25434,25375},
	{25396,25237},
	{27197,27083},
	{27252,27284,27285,27255,27256,27257,27258},
	{27415,27416,27417},
	{27672,27679},
	{27287,27288},
	{25341,25401},
	{25209,25400},
	{25486,25487},
	{25397,25241},
	{25449,25452},
	{27175,27233,26952},
	{2278,2280},
	{25479,25481},
	{25356,25478},
	{25488,25489},
	{25363,25426},
	{25437,25378},
	{25438,25383},
	{25367,25429},
	{28393,28457},
	{28178,28420},
	{25588,25589},
	{28254,28427},
	{28202,28203,28204,28205,28428,28429,28430,28431},
	{28068,28069},
	{25420,25017},
	{27793,27887},
	{28174,28416,28418},
	{25166,24950},
	{28184,28426},
	{27312,27313},
	{25052,24927},
	{25798,25799},
	{25825,25826},
	{28172,28417},
	{25796,25797},
	{25778,25779},
	{26887,25541},
	{25774,25775},
	{25565,25020},
	{25835,25836},
	{25813,25814},
	{26886,25534},
	{27318,27319},
	{27323,27324},
	{27314,27315},
	{27327,27328},
	{25869,25870},
	{28245,28433},
	{27833,27880},
	{25873,25874},
	{28239,28432},
	{27329,27330},
	{27125,27128},
	{25559,25019},
	{27063,27062},
	{25121,24947},
	{28514,28515},
	{28179,28421},
	{25744,25745},
	{27310,27311},
	{2963,2965},
	{25049,24907},
	{25585,25586},
	{27794,27888},
	{27858,27898},
	{25050,24910},
	{25048,24906},
	{28182,28424},
	{28401,28465},
	{28031,28042},
	{28160,28161},
	{28177,28419},
	{28399,28459},
	{28246,28434},
	{25609,25610},
	{27825,27879},
	{28253,28436},
	{27446,27447},
	{27357,27358},
	{28406,28463},
	{27325,27326},
	{28394,28461},
	{27119,27120},
	{25421,25107},
	{27832,27897},
	{27131,27132},
	{28252,28435},
	{28398,28458},
	{27316,27317},
	{28180,28422},
	{25566,25069},
	{27709,27886},
	{27797,27884},
	{27831,27896},
	{26895,26896},
	{27912,27913},
	{27693,27885},
	{27796,27883},
	{27829,27894},
	{27320,27321},
	{27830,27895},
	{25513,25591},
	{25053,24928},
	{28143,28142},
	{27275,27276},
	{28328,28474,28475,28476,28477,28478},
	{25627,25628},
	{28181,28423},
	{28405,28466,28473},
	{28283,28284},
	{26172,25690},
	{28316,28448},
	{28318,28451},
	{28317,28450},
	{28319,28452},
	{28313,28445},
	{4512,4513},
	{12742,12743,12744,12745,12746,28649,12739,12747,12748,12749,12750,28650},
	{28279,28440},
	{28320,28454},
	{9257,9269,9270,9271},
	{26158,25684},
	{28311,28443},
	{28857,28858},
	{26160,25686},
	{28314,28446},
	{4119,4447},
	{2523,3363},
	{4117,4443},
	{996,998},
	{26186,25719},
	{28315,28447},
	{26166,25693},
	{28286,28441},
	{28265,28437},
	{28321,28455},
	{13408,13410,13409,13411},
	{28278,28439},
	{27568,27582},
	{27565,27579},
	{28312,28444},
	{28327,28453},
	{27822,27853},
	{27845,27856},
	{8579,8595},
	{25687,26161},
	{27821,27852},
	{28326,28449},
	{27875,27907},
	{26173,25694},
	{27843,27855},
	{4107,4112,5886,5891},
	{4105,4110,5884,5889},
	{4103,4108,5882,5887},
	{4104,4109,5883,5888},
	{4106,4111,5885,5890},
	{9419,9422},
	{27876,27908},
	{25688,26162},
	{26167,25697},
	{26169,25699},
	{26168,25698},
	{8105,8120},
	{28569,28570},
	{26164,25691},
	{27573,27591},
	{26187,25720},
	{26159,25685},
	{27571,27589},
	{7497,7493},
	{7781,7782,7783,7784},
	{8752,8753,8754,8755},
	{8757,8758,8759,8760},
	{8747,8748,8749,8750},
	{27902,27909},
	{28322,28456},
	{26165,25692},
	{9636,9635},
	{27795,27854},
	{26163,25689},
	{28266,28438},
	{27567,27581},
	{26174,25695},
	{26171,25701},
	{10288,10120},
	{9996,9997},
	{29529,29530},
	{10144,10208},
	{10051,10052},
	{9498,9499},
	{29539,29536},
	{10443,10442},
	{29594,29593},
	{29543,29542},
	{10042,10043},
	{10927,10928},
	{10005,10006},
	{10026,10027},
	{29538,29535},
	{9791,9770},
	{10163,10162},
	{10291,10875},
	{10346,10347},
	{9986,9987},
	{10446,10447},
	{10002,10003},
	{10113,10114},
	{10119,9407},
	{10035,10036},
	{10033,10034},
	{10116,10117},
	{29528,29527},
	{9994,9995},
	{9961,9960,9957},
	{10040,10041},
	{9827,9828},
	{10985,13429},
	{10637,10688},
	{29689,29688},
	{11072,11885},
	{10640,10689},
	{10263,10264},
	{10562,10595},
	{10564,10598},
	{11010,11102},
	{10773,10751},
	{10586,10603},
	{10626,10627},
	{9955,9946},
	{9789,9850,9851},
	{10108,10107},
	{10776,10769},
	{10738,10739,10740,10741},
	{10733,10734,10735,10736},
	{10725,10726,10727,10728},
	{10759,10761},
	{10589,10604},
	{10802,10723},
	{9982,9983},
	{10621,10623},
	{10799,10715},
	{10766,10767},
	{10801,10785},
	{10587,10687},
	{11094,11099},
	{11497,11498},
	{35531,35532},
	{10653,10826},
	{9884,9885,9886,9887},
	{10582,10600},
	{10983,10989},
	{10654,10827},
	{10658,10823},
	{9871,9872},
	{10744,10745},
	{35542,35543},
	{10571,10684},
	{10076,10077,10074,10075},
	{10457,10488},
	{11517,11534},
	{11034,11104},
	{35539,35540},
	{10572,10597},
	{35519,35520},
	{35517,35518},
	{10806,10742},
	{10323,10365},
	{10299,10329},
	{10321,10330},
	{10322,10338},
	{10655,10828},
	{10659,10822},
	{10803,10786},
	{10656,10824},
	{10775,10768},
	{10568,10683},
	{9858,9859},
	{10644,10633},
	{10645,10639},
	{35535,35538},
	{10606,10611},
	{10574,10685},
	{35521,35522},
	{10502,10505},
	{35525,35526},
	{10573,10599},
	{10455,10486},
	{11002,11003},
	{10612,10613},
	{10680,10681},
	{10662,10663},
	{35528,35529},
	{10772,10750},
	{10569,10760},
	{35533,35534},
	{10585,10602},
	{9869,9870},
	{9879,9868},
	{10575,10686},
	{10563,10596},
	{10888,13430},
	{10651,10692},
	{9938,9937},
	{9936,9935},
	{10648,10647},
	{9940,9939},
	{9855,9856},
};
local QuestAlias = {}; -- QuestID => GroupReference,
for i,group in pairs(QuestAliasData) do
	for j,id in pairs(group) do
		QuestAlias[id] = group;
	end
end
QuestAliasData = nil;

-- Cache & Callback stuff for info loaded from tooltips.
--[[
local Queue = {};
local function CheckQueue()
	for callback, info in pairs(Queue) do
		local func = GameInfo[ info[1] ];
		local v = func(GameInfo, select(2, info));
		if v and strlen(v) > 0 then
			callback(v);
			Queue[callback] = nil;
		end
	end
end
C_Timer.NewTicker(1, CheckQueue);
function GameInfo:Get( func, callback, ... )
	local key = strjoin(',',func,...);
	if Cache[key] then
		return Cache[key];
	end
	Queue[callback] = {'Get'..func,...};
	CheckQueue();
	return '[Loading...]';
end
--]]

--[[
work on a pre-load mass-fetch that populates the games cache (with a timeout for invalid stuff), use event handler to signal load complete.
--]]

-- Cached tooltip scanning stuff.
local Cache = {};
function GameInfo:Get(type,id,obj,aliasIndex)
	id = tonumber(id);
	obj = tonumber(obj);
	if not id then
		return 'Error: Missing ID - '..type;
	end
	local key = strjoin(',',type,id,obj or '');
	if Cache[key] then
		return Cache[key];
	end
	
	Scanner:SetOwner(WorldFrame, "CENTER");
	Scanner:ClearLines();
	
	local v;
	
	-- Quest Title/Name
	if type == 'QuestName' then
		Scanner:SetHyperlink("quest:"..id);
		v = DGV_TooltipScannerTextLeft1:GetText();
		
	-- Quest Objective text (XX - Objective)
	elseif type == 'QuestObjectiveText' then
		Scanner:SetHyperlink("quest:"..id);
		local n = 0;
		for i = 1,99 do
			local str = _G['DGV_TooltipScannerTextLeft'..i];
			if not str then return end
			local text = str:GetText();
			if text and text:match("^ %- .*") then
				n = n+1;
				if obj and n >= obj then
					v = (n == obj) and text:match("^ %- (.*)");
					break;
				end
			end
		end
		
	-- NPC Name
	elseif type == 'NPCName' then
		Scanner:SetHyperlink('unit:Creature-0-0-0-0-'..id);
		v = DGV_TooltipScannerTextLeft1:GetText();
	end
	
	if v and strlen(v) > 0 then
		Cache[key] = v;
		return v;
	elseif type:match('Quest') and QuestAlias[id] then -- TODO: probably better to just replace this with a generated static quest name lookup table, will suck for non-english users, but rice.
		local i = aliasIndex or 1;
		if QuestAlias[id][i] then
			local altV = self:Get( type, QuestAlias[id][i], obj, i+1 );
			if altV then
				Cache[key] = altV;
				return v;
			end
		end
	end
	
end




function GameInfo:GetQuestName(id)
	return self:Get('QuestName',id);
end
function GameInfo:GetQuestObjectiveText(id,obj)
	return self:Get('QuestObjectiveText',id,obj);
end
function GameInfo:GetNPCName(id)
	return self:Get('NPCName',id);
end

function GameInfo:GetQuestState( questId )
	if IsQuestFlaggedCompleted(questId) then
		return 'COMPLETED'; -- Completed & Turned in
	end
	local i = GetQuestLogIndexByID(questId);
	return ((i and i > 0) and 'ACTIVE' or 'NONE'), i;
end


